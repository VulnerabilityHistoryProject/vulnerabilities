CVE: CVE-2013-2094
curation_level: 2
reported_date:
announced_date: '2013-05-14'
published_date: '2013-05-14'
description: |
  The function `perf_swevent_init` in the Linux Kernel Events package used an
  incorrectly sized integer, and given that `perf_event_open` calls this
  function, an attacker could exploit this to gain higher privileges than
  they are authorized to have
bounty:
  amt:
  announced:
  url:
reviews: []
bugs: []
fixes:
- commit: 8176cced706b5e5d15887584150764894e94e02f
  note: Manually confirmed
vccs:
- commit: b0a873ebbf87bf38bf70b5e39a7cadc96099fa13
  note: Discovered automatically by archeogit.
upvotes_instructions: |
  For the first round, ignore this upvotes number.

  For the second round of reviewing, you will be giving a certain amount of
  upvotes to each vulnerability you see. Your peers will tell you how
  interesting they think this vulnerability is, and you'll add that to the
  upvotes score on your branch.
upvotes:
unit_tested:
  code: false
  code_answer: This was not unit tested
  fix: false
  fix_answer: This was not unit tested
discovered:
  answer: |
    Founf by Tommi Rantala at University of Indiana on 2013-04-12
    https://lkml.indiana.edu/hypermail/linux/kernel/1304.1/03652.html
  automated: false
  contest: false
  developer: nil
autodiscoverable:
  note: |
    Since it is a permissions issue, it is not easily fuzzed
  answer: false
specification:
  note: |
    This is specific to the internal operations of the Kernel, and is not
    specified anywhere.
  answer: false
subsystem:
  name: events
  note: This bug is in the events core subsystem
interesting_commits:
  commits:
i18n:
  answer: false
  note: |
    This was a small programming mistake not intended to fix
    internationalization
sandbox:
  answer: true
  note: This bug allowed for privilege escalation, violating the sandbox
ipc:
  answer: false
  note: This bug did not affect IPC
discussion:
  discussed_as_security: false
  any_discussion: true
  note: This was discussed as an interesting bug on forums before being reported
vouch:
  answer: false
  note: I did not find any vouches
stacktrace:
  any_stacktraces: true
  stacktrace_with_fix: false
  note: A stack trace was mentioned in the first forum post
forgotten_check:
  answer: false
  note: |
    It depends on if you define a wrong-sized integer as a "forgotten check" but
    I would not categorize it as one
order_of_operations:
  answer: false
  note: No order of operations was changed
lessons:
  defense_in_depth:
    applies: false
    note:
  least_privilege:
    applies: false
    note:
  frameworks_are_optional:
    applies: false
    note: 
  native_wrappers:
    applies: false
    note:
  distrust_input:
    applies: true
    note: This bug did not sanitize input
  security_by_obscurity:
    applies: false
    note:
  serial_killer:
    applies: false
    note:
  environment_variables:
    applies: false
    note:
  secure_by_default:
    applies: false
    note:
  yagni:
    applies: false
    note:
  complex_inputs:
    applies: true
    note: This struct was very complex and could easily lead to an exploit
mistakes:
  answer: |
    This was mostly just a simple slip. The original programmer forgot to check
    all of the bits in a number that was too long, and this allowed for a
    buffer overflow that compromised security. The fix was 3 characters long.
CWE:
- 189
CWE_note: Manually confirmed
nickname:
CVSS:
