CVE: CVE-2013-1796
CWE: [119]
ipc: No
CVSS: "6.8"
bugs: []
i18n:
  note:
  answer: "No, since it was only related to buffer overflow issues. Nothing was related to internationalization."
  question: |
    Was the feature impacted by this vulnerability about internationalization
    (i18n)?

    An internationalization feature is one that enables people from all
    over the world to use the system. This includes translations, locales,
    typography, unicode, or various other features.

    Answer should be true or false
    Write a note about how you came to the conclusions you did, regardless of
    what your answer was.
vccs:
  -commit: "18068523d3a0b41fcee5b53cdb437a0ab4d65e4b"
  note: "Discovered automatically by archeogit."
fixes:
  -commit: "c300aa64ddf57d9c5d9c898a64b36877345dd4a9"
  note: "Manually confirmed"
vouch:
  note: "According to the GitHub commit that fixed this, Andrew Honig (commit author) and Marcelo Tosatti (RedHat) signed off on this commit."
  answer: Yes
  question: >
    Was there any part of the fix that involved one person vouching for

    another's work?


    This can include:
      * signing off on a commit message
      * mentioning a discussion with a colleague checking the work
      * upvoting a solution on a pull request

    Answer must be true or false.

    Write a note about how you came to the conclusions you did, regardless of what your answer was.
bounty:
  amt:
  url:
  announced:
lessons:
  yagni:
    note:
    applies: false
  question: |
    Are there any common lessons we have learned from class that apply to this
    vulnerability? In other words, could this vulnerability serve as an example
    of one of those lessons?

    Leave "applies" blank or put false if you did not see that lesson (you do
    not need to put a reason). Put "true" if you feel the lesson applies and put
    a quick explanation of how it applies.

    Don't feel the need to claim that ALL of these apply, but it's pretty likely
    that one or two of them apply.

    If you think of another lesson we covered in class that applies here, feel
    free to give it a small name and add one in the same format as these.
  serial_killer:
    note:
    applies: false
  complex_inputs:
    note: "The input that could overflow the buffer is hard to track in such a large system that constantly deals with memory allocation and other low level coding actions. Therefore, it needed to be well analyzed before a fix could be found."
    applies: true
  distrust_input:
    note:
    applies: false
  least_privilege:
    note:
    applies: false
  native_wrappers:
    note:
    applies: false
  defense_in_depth:
    note:
    applies: false
  secure_by_default:
    note:
    applies: false
  environment_variables:
    note:
    applies: false
  security_by_obscurity:
    note:
    applies: false
  frameworks_are_optional:
    note:
    applies: false
reviews: []
sandbox: No.
upvotes: "4"
CWE_note: |
  CWE as registered in the NVD. If you are curating, check that this
  is correct and replace this comment with "Manually confirmed".
mistakes: "The mistake that seemed to have occurred here was that the original
  code did not account for memory allocation overflowing the buffer. It wasn't
  something that they checked, so going back to fix it was a relatively simple
  process once they found where the buffer was being overflowed. "
nickname: "null"
subsystem:
  answer: The path of the file that needed to be fixed was located in x86/kvm/...
  name: kvm
discovered: Andrew Honig
discussion:
  note: "No discussion"
  question: |
    Was there any discussion surrounding this?

    A discussion can include debates, disputes, or polite talk about how to
    resolve uncertainty.

    Example include:
      * Is this out of our scope?
      * Is this a security?
      * How should we fix this?

    Just because you see multiple comments doesn't mean it's a discussion.
    For example:
      * "Fix line 10". "Ok" is not what we call a discussion
      * "Ping" (reminding people)

    Check the bugs reports, pull requests, and mailing lists archives.

    These answers should be boolean.
      discussed_as_security: true or false
      any_discussion: true or false

    Put any links to disagreements you found in the notes section, or any other
    comment you want to make.
  any_discussion:
  discussed_as_security:
stacktrace:
  note: "No stacktraces found."
  question: |
    Are there any stacktraces in the bug reports?

    Secondly, if there is a stacktrace, is the fix in the same file that the
    stacktrace points to?

    If there are no stacktraces, then both of these are false - but be sure to
    mention where you checked in the note.

    Answer must be true or false.
    Write a note about how you came to the conclusions you did, regardless of
    what your answer was.
  any_stacktraces:
  stacktrace_with_fix:
description: >-
  If the guest sets the GPA of the time_page so that the request to
  update the time straddles a page then KVM will write onto an incorrect
  page.  The write is done by using kmap atomic to get a pointer to the page for
  the time structure and then performing a memcpy to that page starting at an
  offset that the guest controls.  Well behaved guests always provide a 32-byte
  aligned address, however a malicious guest could use this to corrupt host
  kernel memory.
unit_tested:
  fix: false
  code: true
  question: |
    Were automated unit tests involved in this vulnerability?
    Was the original code unit tested, or not unit tested? Did the fix involve
    improving the automated tests?

    For code: and fix: - your answer should be boolean.

    For the code_answer below, look not only at the fix but the surrounding
    code near the fix in related directories and determine if and was there were
    unit tests involved for this subsystem.

    For the fix_answer below, check if the fix for the vulnerability involves
    adding or improving an automated test to ensure this doesn't happen again.
  fix_answer:
  code_answer: "There seemed to be added unit tests to see simply if the buffer would be overflowed by certain values."
reported_date:
specification:
  note:
  answer: false
  instructions: |
    Is there mention of a violation of a specification? For example, the POSIX
    spec, an RFC spec, a network protocol spec, or some other requirements
    specification.

    Be sure to check the following artifacts for this:
      * bug reports
      * security advisories
      * commit message
      * mailing lists
      * anything else

    The answer field should be boolean. In answer_note, please explain
    why you come to that conclusion.
announced_date: 2013-03-22
curation_level: 2
published_date: 2013-03-22
forgotten_check:
  note: "The code forgot to check for a buffer overflow."
  answer: true
  question: |
    Does the fix for the vulnerability involve adding a forgotten check?

    A "forgotten check" can mean many things. It often manifests as the fix
    inserting an entire if-statement or a conditional to an existing
    if-statement. Or a call to a method that checks something.

    Example of checks can include:
      * null pointer checks
      * check the current role, e.g. root
      * boundary checks for a number
      * consult file permissions
      * check a return value

    Answer must be true or false.
    Write a note about how you came to the conclusions you did, regardless of
    what your answer was.
autodiscoverable:
  note: "A fully automated tool could have discovered this, as it related to a buffer overflow issue."
  answer: Yes.
  instructions: |
    Is it plausible that a fully automated tool could have discovered
    this? These are tools that require little knowledge of the domain,
     e.g. automatic static analysis, compiler warnings, fuzzers.

    Examples for true answers: SQL injection, XSS, buffer overflow

    In systemd, the actually use OZZ Fuzz. If there's a link to it, add it here.

    Examples for false: RFC violations, permissions issues, anything
    that requires the tool to be "aware" of the project's
    domain-specific requirements.

    The answer field should be boolean. In answer_note, please explain
    why you come to that conclusion.
interesting_commits: []
order_of_operations:
  note: "No."
  answer: false
  question: |
    Does the fix for the vulnerability involve correcting an order of
    operations?

    This means the fix involves moving code around or changing the order of
    how things are done.

    Answer must be true or false.
    Write a note about how you came to the conclusions you did, regardless of
    what your answer was.
CWE Identifier: "119"
announced: 2013-03-22
discovered_answer: Andrew Honig discovered a flaw in guest OS time updates in
  the Linux kernelâ€™s KVM (Kernel-based Virtual Machine). A privileged guest user
  could exploit this flaw to cause a denial of service (crash host system) or
  potential escalate privilege to the host kernel level.
discovered_automated:
  -
  - "1"
discovered_developer:
  -
  - "1"
discovered_contest:
  -
  - "1"
major_events: []
related: No.
bugs_repeater: []
sandbox_answer:
  -
  - "1"
sandbox_note: This vulnerability dealt with buffer overflow which is unrelated to sandboxing.
ipc_answer:
  -
  - "1"
ipc_note: This vulnerability only dealt with buffer overflows.
